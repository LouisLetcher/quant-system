name: Pull Request Review

on:
  pull_request:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.12"
  POETRY_VERSION: "1.8.0"

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          config-file: '.github/dependency-review-config.yml'
          fail-on-severity: moderate
          fail-on-scopes: runtime
          comment-summary-in-pr: true

  quick-checks:
    name: Quick Code Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev

      - name: Install project
        run: poetry install --no-interaction

      - name: Run Black formatting check
        run: poetry run black --check .

      - name: Run isort import check
        run: poetry run isort --check-only .

      - name: Run Ruff linting
        run: poetry run ruff check .

      - name: Run basic tests
        run: poetry run pytest tests/ -x --tb=short
